version: '3.8'
# 部署多主多从
services:

  redis-1:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7001:7001
    command:
      bash -c "echo 'port 7001' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-2:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7002:7002
    command:
      bash -c "echo 'port 7002' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-3:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7003:7003
    command:
      bash -c "echo 'port 7003' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-4:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7004:7004
    command:
      bash -c "echo 'port 7004' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-5:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7005:7005
    command:
      bash -c "echo 'port 7005' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-6:
    image: redis:6.0
    networks:
      - redisdb
    ports:
      - 7006:7006
    command:
      bash -c "echo 'port 7006' > redis.conf  &&
      echo 'bind 0.0.0.0' >> redis.conf &&
      echo 'protected-mode no' >> redis.conf &&
      echo 'cluster-enabled yes' >> redis.conf &&
      echo 'appendonly yes' >> redis.conf &&
      echo 'requirepass foobared' >> redis.conf  &&
      echo 'masterauth foobared' >> redis.conf  &&
      cat redis.conf &&
      redis-server redis.conf"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

  redis-cluster:
    image: redis:6.0
    networks:
      - redisdb
    # command:
    #  bash -c "redis-cli --cluster create redis-1:7001 redis-2:7002 redis-3:7003 redis-4:7004 redis-5:7005 redis-6:7006 --cluster-replicas 1 -a foobared"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

networks:
  redisdb:
    driver: overlay


    # redis-cli --cluster create 10.0.2.12:7001 10.0.2.14:7002 10.0.2.16:7003 10.0.2.18:7004 10.0.2.20:7005 10.0.2.3:7006 --cluster-replicas 1 -a foobared