version: '3.3'
services:
  setup:
    image: elasticsearch:8.11.1
    user: root
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          mkdir -p config/certs;
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
          echo "Setting file permissions"
          chown -R root:root config/certs;
          find . -type d -exec chmod 750 \{\} \;;
          find . -type f -exec chmod 640 \{\} \;;
        fi;
      '
    networks:
      - middleware

  kibana:
    image: kibana:8.11.1
    environment:
      - ELASTICSEARCH_URL=http://es01:9200
      - ELASTICSEARCH_HOSTS=http://es01:9200
      # - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=kibana
      # curl -X POST -u elastic:kibana "localhost:9200/_security/service/elastic/kibana/credential/token/token1?pretty" # 用于获取token
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=AAEAAWVsYXN0aWMva2liYW5hL3Rva2VuMTpkWk9qV1RkQVFmbXBHbFpVRThtZWZ3
    ports:
      - target: 5601
        published: 5601
        mode: host
    networks:
      - middleware
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 800M
  es01:
    image: elasticsearch:8.11.1
    hostname: es01
    environment:
      - network.publish_host=es01
      - network.host=0.0.0.0
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - path.repo=/usr/share/elasticsearch/backups
      - "ES_JAVA_OPTS=-Xms512M -Xmx512M"
      # - ELASTIC_PASSWORD=vsUZGKNvjWRtTKPmDG
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certs/ca/ca.key
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certs/ca/ca.crt
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      # - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=kibana
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    #   nofile:
    #     soft: 65536
    #     hard: 65536
    # cap_add:
    #   - IPC_LOCK
    # sysctls:
    #   - vm.max_map_count=262144
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es01_data:/usr/share/elasticsearch/data
      - es01_logs:/usr/share/elasticsearch/logs
    ports:
      - target: 9200
        published: 9200
        mode: host
    networks:
      - middleware
    deploy:
      mode: replicated
      replicas: 1

volumes:
  certs:
    driver: local
  es01_data:
    driver: local
  es01_logs:
    driver: local

networks:
  middleware:
    external: true

# ELASTICSEARCH_SERVICEACCOUNTTOKEN=MY_TOKEN
# curl -X POST -u elastic:kibana "localhost:9200/_security/service/elastic/kibana/credential/token/token1?pretty"
