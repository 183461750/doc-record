version: "3.5"

services:

  mysql_m1:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
    command:
      bash -c ' echo "[mysqld]" > /etc/mysql/conf.d/haproxy.cnf &&
      echo "symbolic-links=0" >> /etc/mysql/conf.d/haproxy.cnf &&
      docker-entrypoint.sh mysqld '
    ports:
      - target: 3306
        published: 13306
        mode: host
    networks:
      middleware:
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    volumes:
      - mariadb_mysql_m1:/var/lib/mysql

  mysql_m2:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
    command:
      bash -c ' echo "[mysqld]" > /etc/mysql/conf.d/haproxy.cnf &&
      echo "symbolic-links=0" >> /etc/mysql/conf.d/haproxy.cnf &&
      docker-entrypoint.sh mysqld '
    ports:
      - target: 3306
        published: 13307
        mode: host
    networks:
      middleware:
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    volumes:
      - mariadb_mysql_m2:/var/lib/mysql

  haproxy:
    image: haproxy:latest
    user: root
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
    command:
      bash -c 'echo "global" > /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  log 127.0.0.1 local0" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "defaults" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  log global" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  retries 2" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  timeout connect 3000" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  timeout server 5000" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  timeout client 5000" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "listen mysql-cluster" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  bind *:3308" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  mode tcp" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  option tcp-check" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  balance roundrobin" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  server mysql-master1 mysql_m1:3306 check" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  server mysql-master2 mysql_m2:3306 check" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "listen mysql-clusterstats" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  bind *:8080" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  mode http" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  stats enable" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  stats uri /" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  stats realm Strictly\ Private" >> /usr/local/etc/haproxy/haproxy.cfg &&
      echo "  stats auth admin:admin" >> /usr/local/etc/haproxy/haproxy.cfg &&
      docker-entrypoint.sh haproxy -f /usr/local/etc/haproxy/haproxy.cfg'
    ports:
      - target: 3308
        published: 3308
        mode: host
      - target: 8080
        published: 18080
        mode: host
    depends_on:
      - mysql_m1
      - mysql_m2
    networks:
      middleware:
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

volumes:
  mariadb_mysql_m1:
  mariadb_mysql_m2:

networks:
  middleware:
    external: true